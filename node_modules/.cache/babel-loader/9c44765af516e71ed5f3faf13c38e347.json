{"ast":null,"code":"var _jsxFileName = \"/Users/timurtoktosev/Documents/projects/react-projects/todo/src/components/Todolist.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport TodoForm from \"./TodoForm\";\nimport TodoApp from \"./TodoApp\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Todolist() {\n  _s();\n\n  const [todos, setTodos] = useState([]);\n\n  const addTodo = todo => {\n    const newTodos = [todo, ...todos];\n    setTodos(newTodos);\n  };\n\n  const updateTodo = (todoId, newValue) => {\n    setTodos(prev => prev.map(item => item.id === todoId ? newValue : item));\n  };\n\n  const removeTodo = id => {\n    const removedArr = [...todos].filter(todo => todo.id !== id);\n    setTodos(removedArr);\n  };\n\n  const completeTodo = id => {\n    let updatedTodos = todos.map(todo => {\n      if (todo.id === id) {\n        todo.isComplete = !todo.isComplete;\n      }\n\n      return todo;\n    });\n    setTodos(updatedTodos);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\u0421\\u043F\\u0438\\u0441\\u043E\\u043A \\u0437\\u0430\\u0434\\u0430\\u0447\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TodoForm, {\n      onSubmit: addTodo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TodoApp, {\n      todos: todos,\n      completeTodo: completeTodo,\n      removeTodo: removeTodo,\n      updateTodo: updateTodo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Todolist, \"ZATHeV9x55jFrDOww2hwcxQ3V1U=\");\n\n_c = Todolist;\nexport default Todolist;\n\nvar _c;\n\n$RefreshReg$(_c, \"Todolist\");","map":{"version":3,"sources":["/Users/timurtoktosev/Documents/projects/react-projects/todo/src/components/Todolist.jsx"],"names":["React","useState","TodoForm","TodoApp","Todolist","todos","setTodos","addTodo","todo","newTodos","updateTodo","todoId","newValue","prev","map","item","id","removeTodo","removedArr","filter","completeTodo","updatedTodos","isComplete"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,OAAP,MAAoB,WAApB;;;;AAEA,SAASC,QAAT,GAAoB;AAAA;;AAChB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,EAAD,CAAlC;;AAEA,QAAMM,OAAO,GAAIC,IAAD,IAAU;AAEtB,UAAMC,QAAQ,GAAG,CAACD,IAAD,EAAO,GAAGH,KAAV,CAAjB;AAEAC,IAAAA,QAAQ,CAACG,QAAD,CAAR;AACH,GALD;;AAOA,QAAMC,UAAU,GAAG,CAACC,MAAD,EAASC,QAAT,KAAsB;AAErCN,IAAAA,QAAQ,CAAEO,IAAD,IACLA,IAAI,CAACC,GAAL,CAAUC,IAAD,IAAWA,IAAI,CAACC,EAAL,KAAYL,MAAZ,GAAqBC,QAArB,GAAgCG,IAApD,CADI,CAAR;AAGH,GALD;;AAOA,QAAME,UAAU,GAAID,EAAD,IAAQ;AACvB,UAAME,UAAU,GAAG,CAAC,GAAGb,KAAJ,EAAWc,MAAX,CAAmBX,IAAD,IAAUA,IAAI,CAACQ,EAAL,KAAYA,EAAxC,CAAnB;AAEAV,IAAAA,QAAQ,CAACY,UAAD,CAAR;AACH,GAJD;;AAMA,QAAME,YAAY,GAAIJ,EAAD,IAAQ;AACzB,QAAIK,YAAY,GAAGhB,KAAK,CAACS,GAAN,CAAWN,IAAD,IAAU;AACnC,UAAIA,IAAI,CAACQ,EAAL,KAAYA,EAAhB,EAAoB;AAChBR,QAAAA,IAAI,CAACc,UAAL,GAAkB,CAACd,IAAI,CAACc,UAAxB;AACH;;AACD,aAAOd,IAAP;AACH,KALkB,CAAnB;AAMAF,IAAAA,QAAQ,CAACe,YAAD,CAAR;AACH,GARD;;AAUA,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,QAAD;AAAU,MAAA,QAAQ,EAAEd;AAApB;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI,QAAC,OAAD;AACI,MAAA,KAAK,EAAEF,KADX;AAEI,MAAA,YAAY,EAAEe,YAFlB;AAGI,MAAA,UAAU,EAAEH,UAHhB;AAII,MAAA,UAAU,EAAEP;AAJhB;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA,kBADJ;AAYH;;GA7CQN,Q;;KAAAA,Q;AA+CT,eAAeA,QAAf","sourcesContent":["import React, { useState } from \"react\";\nimport TodoForm from \"./TodoForm\";\nimport TodoApp from \"./TodoApp\";\n\nfunction Todolist() {\n    const [todos, setTodos] = useState([]);\n\n    const addTodo = (todo) => {\n\n        const newTodos = [todo, ...todos];\n\n        setTodos(newTodos);\n    };\n\n    const updateTodo = (todoId, newValue) => {\n\n        setTodos((prev) =>\n            prev.map((item) => (item.id === todoId ? newValue : item))\n        );\n    };\n\n    const removeTodo = (id) => {\n        const removedArr = [...todos].filter((todo) => todo.id !== id);\n\n        setTodos(removedArr);\n    };\n\n    const completeTodo = (id) => {\n        let updatedTodos = todos.map((todo) => {\n            if (todo.id === id) {\n                todo.isComplete = !todo.isComplete;\n            }\n            return todo;\n        });\n        setTodos(updatedTodos);\n    };\n\n    return (\n        <>\n            <h1>Список задач</h1>\n            <TodoForm onSubmit={addTodo} />\n            <TodoApp\n                todos={todos}\n                completeTodo={completeTodo}\n                removeTodo={removeTodo}\n                updateTodo={updateTodo}\n            />\n        </>\n    );\n}\n\nexport default Todolist;\n"]},"metadata":{},"sourceType":"module"}